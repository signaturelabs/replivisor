defmodule Replivisor.Server do
	use GenServer.Behaviour

	def init(state) do
		IO.puts "init called"
		init_track_changes
		{ :ok, state }
	end

	def handle_info(msg, state) do
		IO.puts "handle_info called"
		{ :noreply, state }
	end

	def init_track_changes do
		{:ok, last_seq, _rows} = :couchbeam_changes.fetch(Db, [])
		since_tuple = {:since,last_seq}
		IO.puts "monitoring changes starting at seq: #{last_seq}"
		#ChangesOptions = [continuous, heartbeat,SinceTuple],
		#ServerPid = whereis(?MODULE),
		#{ok, _StartRef, _ChangePid} = couchbeam_changes:stream(Db, ServerPid, ChangesOptions).
	end

end